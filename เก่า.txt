Private Function InsertOrUpdateModelStatus(command As OracleCommand, machineadd As String, modelAdd As String, statusAdd As String) As Integer
    Dim rowsAffected As Integer = 0
    Dim tokenId As String = ""
    Dim hashedToken As String = ""

    ' First, check the latest status and ACTION_ID for this machine and model combination
    command.CommandText = "SELECT m1.STATUSADD, m1.TOKEN_ID, m1.START_TIME, m1.ACTION_ID " &
                 "FROM MONFORTEST m1 " &
                 "INNER JOIN (SELECT MACHINEADD, MODELADD, MAX(START_TIME) AS MaxSTART_TIME " &
                 "            FROM MONFORTEST " &
                 "            GROUP BY MACHINEADD, MODELADD) m2 " &
                 "ON m1.MACHINEADD = m2.MACHINEADD " &
                 "AND m1.MODELADD = m2.MODELADD " &
                 "AND m1.START_TIME = m2.MaxSTART_TIME " &
                 "WHERE m1.MACHINEADD = :machineadd " &
                 "AND m1.MODELADD = :modelAdd"

    command.Parameters.Clear()
    command.Parameters.Add(New OracleParameter("machineadd", machineadd))
    command.Parameters.Add(New OracleParameter("modelAdd", modelAdd))

    Dim reader As OracleDataReader = command.ExecuteReader()
    Dim previousStatus As String = ""
    Dim previousTokenId As String = ""
    Dim lastStartTime As DateTime? = Nothing
    Dim previousActionId As Integer = 0

    If reader.Read() Then
        previousStatus = reader("STATUSADD").ToString().ToUpper()
        previousActionId = Convert.ToInt32(reader("ACTION_ID"))
        If Not reader.IsDBNull(reader.GetOrdinal("TOKEN_ID")) Then
            previousTokenId = reader("TOKEN_ID").ToString()
        End If
        If Not reader.IsDBNull(reader.GetOrdinal("START_TIME")) Then
            lastStartTime = CType(reader("START_TIME"), DateTime)
        End If
    End If
    reader.Close()

    ' ตรวจสอบว่าต้องสร้าง TOKEN_ID ใหม่หรือไม่
    Dim needNewToken As Boolean = False

    ' กรณีที่ไม่มี record ก่อนหน้า หรือ record ก่อนหน้ามี ACTION_ID = 1 และ status ปัจจุบันไม่ใช่ "end"
    If (String.IsNullOrEmpty(previousTokenId) OrElse previousActionId = 1) AndAlso statusAdd.ToLower() <> "end" Then
        needNewToken = True
    End If

    ' อัพเดท FINISH_TIME และ MINUTES_PASSED ของ record ก่อนหน้าที่มี TOKEN_ID เดียวกัน
    If Not String.IsNullOrEmpty(previousTokenId) AndAlso Not needNewToken Then
        ' คำนวณ minutesPassed
        Dim currentTime As DateTime = DateTime.Now
        Dim minutesPassed As Integer = 0
        If lastStartTime.HasValue Then
            Dim timeDifference As TimeSpan = currentTime - lastStartTime.Value
            minutesPassed = CInt(timeDifference.TotalMinutes)
        End If

        Dim updateFinishTimeSQL As String = "UPDATE MONFORTEST SET " &
                                  "FINISH_TIME = SYSTIMESTAMP, " &
                                  "MINUTES_PASSED = :minutesPassed " &
                                  "WHERE MACHINEADD = :machineadd " &
                                  "AND MODELADD = :modelAdd " &
                                  "AND TOKEN_ID = :previousToken " &
                                  "AND START_TIME = (SELECT MAX(START_TIME) FROM MONFORTEST " &
                                  "                  WHERE MACHINEADD = :machineadd " &
                                  "                  AND MODELADD = :modelAdd " &
                                  "                  AND TOKEN_ID = :previousToken)"

        command.CommandText = updateFinishTimeSQL
        command.Parameters.Clear()
        command.Parameters.Add(New OracleParameter("machineadd", machineadd))
        command.Parameters.Add(New OracleParameter("modelAdd", modelAdd))
        command.Parameters.Add(New OracleParameter("previousToken", previousTokenId))
        command.Parameters.Add(New OracleParameter("minutesPassed", minutesPassed))

        rowsAffected += command.ExecuteNonQuery()
        LogMessage(String.Format("Updated FINISH_TIME and MINUTES_PASSED for previous record with Token: {0}", previousTokenId))
    End If

    ' ถ้าสถานะปัจจุบันเป็น "END" ให้อัพเดท ACTION_ID = 1 ของ record ล่าสุด
    If statusAdd.ToLower() = "end" Then
        Dim updateActionSQL As String = "UPDATE MONFORTEST SET ACTION_ID = 1 " &
                                  "WHERE MACHINEADD = :machineadd " &
                                  "AND MODELADD = :modelAdd " &
                                  "AND TOKEN_ID = :previousToken " &
                                  "AND ACTION_ID = 0"

        command.CommandText = updateActionSQL
        command.Parameters.Clear()
        command.Parameters.Add(New OracleParameter("machineadd", machineadd))
        command.Parameters.Add(New OracleParameter("modelAdd", modelAdd))
        command.Parameters.Add(New OracleParameter("previousToken", previousTokenId))

        rowsAffected += command.ExecuteNonQuery()
        LogMessage(String.Format("Updated ACTION_ID to 1 for latest record with Token: {0}", previousTokenId))
    End If

    ' สร้าง TOKEN_ID ใหม่ถ้าจำเป็น
    If needNewToken Then
        ' Get the current count of tokens for this machine-model combination
        command.CommandText = "SELECT COUNT(DISTINCT TOKEN_ID) as TokenCount " &
                    "FROM MONFORTEST " &
                    "WHERE MACHINEADD = :machineadd " &
                    "AND MODELADD = :modelAdd"
        command.Parameters.Clear()
        command.Parameters.Add(New OracleParameter("machineadd", machineadd))
        command.Parameters.Add(New OracleParameter("modelAdd", modelAdd))

        Dim tokenCount As Integer = CInt(command.ExecuteScalar()) + 1

        ' Generate new token combining machine, model, and sequence number
        Dim timestamp As DateTime = DateTime.Now
        tokenId = String.Format("{0}{1}",
                      timestamp.ToString("yyMMddHHmmss"),
                      tokenCount.ToString().PadLeft(4, "0"c))

        hashedToken = tokenId
        LogMessage(String.Format("Generated new Token: {0} for Machine: {1}, Model: {2}", hashedToken, machineadd, modelAdd))
    Else
        ' ใช้ TOKEN_ID เดิม
        hashedToken = previousTokenId
        LogMessage(String.Format("Using existing Token: {0} for Machine: {1}, Model: {2}", hashedToken, machineadd, modelAdd))
    End If

    ' Insert new record with MINUTES_PASSED
    Dim insertSQL As String
    If statusAdd.ToLower() = "end" Then
        insertSQL = "INSERT INTO MONFORTEST (MACHINEADD, MODELADD, STATUSADD, ACTION_ID, " &
           "START_TIME, FINISH_TIME, TOKEN_ID, MINUTES_PASSED) " &
           "VALUES (:machineadd, :modelAdd, :statusAdd, 1, SYSTIMESTAMP, " &
           "SYSTIMESTAMP, :hashedToken, 0)"
    Else
        insertSQL = "INSERT INTO MONFORTEST (MACHINEADD, MODELADD, STATUSADD, ACTION_ID, " &
           "START_TIME, FINISH_TIME, TOKEN_ID, MINUTES_PASSED) " &
           "VALUES (:machineadd, :modelAdd, :statusAdd, 0, SYSTIMESTAMP, " &
           "NULL, :hashedToken, 0)"
    End If

    command.CommandText = insertSQL
    command.Parameters.Clear()
    command.Parameters.Add(New OracleParameter("machineadd", machineadd))
    command.Parameters.Add(New OracleParameter("modelAdd", modelAdd))
    command.Parameters.Add(New OracleParameter("statusAdd", statusAdd))
    command.Parameters.Add(New OracleParameter("hashedToken", hashedToken))

    LogMessage(String.Format("Executing Insert SQL with Token: {0}", insertSQL))
    rowsAffected += command.ExecuteNonQuery()

    Return rowsAffected
End Function
